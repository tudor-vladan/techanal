.PHONY: help dev prod stop clean logs build

help: ## Afi»ôeazƒÉ ajutorul
	@echo "üöÄ TechAnal Docker Commands"
	@echo ""
	@echo "Development:"
	@echo "  make dev          - Porne»ôte aplica»õia √Æn modul development"
	@echo "  make dev-build    - Construie»ôte »ôi porne»ôte √Æn development"
	@echo ""
	@echo "Production:"
	@echo "  make prod         - Porne»ôte aplica»õia √Æn modul produc»õie"
	@echo "  make prod-build   - Construie»ôte »ôi porne»ôte √Æn produc»õie"
	@echo ""
	@echo "Management:"
	@echo "  make stop         - Opre»ôte toate containerele"
	@echo "  make clean        - Opre»ôte »ôi »ôterge volumele/imagini"
	@echo "  make clean-all    - Cleanup complet - »ôterge tot"
	@echo "  make logs         - Afi»ôeazƒÉ log-urile"
	@echo "  make status       - Afi»ôeazƒÉ statusul serviciilor"
	@echo ""

dev: ## Porne»ôte √Æn development
	@./scripts/docker-start.sh

dev-build: ## Construie»ôte »ôi porne»ôte √Æn development
	docker-compose up --build -d

prod: ## Porne»ôte √Æn produc»õie
	@./scripts/docker-prod.sh

prod-build: ## Construie»ôte »ôi porne»ôte √Æn produc»õie
	docker-compose -f docker-compose.prod.yml up --build -d

stop: ## Opre»ôte toate containerele
	docker-compose down
	docker-compose -f docker-compose.prod.yml down

clean: ## Opre»ôte »ôi »ôterge volumele/imagini
	@./scripts/docker-cleanup.sh

clean-all: ## Cleanup complet - »ôterge tot
	@./scripts/docker-cleanup.sh --all

logs: ## Afi»ôeazƒÉ log-urile
	docker-compose logs -f

logs-prod: ## Afi»ôeazƒÉ log-urile din produc»õie
	docker-compose -f docker-compose.prod.yml logs -f

status: ## Afi»ôeazƒÉ statusul serviciilor
	@echo "üìä Development Services:"
	docker-compose ps
	@echo ""
	@echo "üìä Production Services:"
	docker-compose -f docker-compose.prod.yml ps

restart: ## Restart development
	docker-compose restart

restart-prod: ## Restart production
	docker-compose -f docker-compose.prod.yml restart
